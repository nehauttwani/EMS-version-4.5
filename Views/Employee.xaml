<UserControl x:Class="EMS.Views.Employee"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local2="clr-namespace:EMS.ViewModel" xmlns:local1="clr-namespace:EMS"
             xmlns:components="clr-namespace:EMS.Components" d:DataContext="{d:DesignInstance Type=local2:EmployeeViewModel}"
             mc:Ignorable="d"
             
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <local1:MyConverter x:Key="radioBoolToIntConverter" />
        <Style x:Key="actions" TargetType="Button">
            <Setter Property="Margin" Value="20 5 10 5" />


            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" BorderBrush="White" BorderThickness="1">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="White" />

                                        </Trigger>

                                    </Style.Triggers>
                                </Style>

                            </Border.Style>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding EmployeeMain}">
            <StackPanel Orientation="Vertical" Grid.Row="1">

                <Label Content="Employee" FontSize="30" />
                <Button  Content="ADD" Width="70" Height="30" HorizontalAlignment="Left" Margin="0 10 0 0" Command="{Binding EmployeeOperations}" CommandParameter="AddEmployee" />
                <Separator Margin="0 10 0 20" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition  Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <Label Content="First Name:" VerticalAlignment="Center" Margin="0 0 5 0" />
                        <Grid>
                            <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="EmployeeCode" Margin="1 0 0 10" Foreground="Black" Text="{Binding CurrentEmployee.EmployeeDetails.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock IsHitTestVisible="False" Text="Employee Name" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="9,0,0,10" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=EmployeeCode}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                        <Label Content="Department:" VerticalAlignment="Center" />
                        <ComboBox Width="200" ItemsSource="{Binding Path=Departments}" SelectedValue="DepartmentValue" SelectedValuePath="{Binding CurrentEmployee.EmployeeDetails.Department.DepartmentValue ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding CurrentEmployee.EmployeeDetails.Department , Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}" Height="32">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=DepartmentValue}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="20 0 0 0">
                        <Label Content="Email:" VerticalAlignment="Center" Margin="0 0 12 0" />
                        <Grid>
                            <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="EmailAddress" Margin="23 0 0 10" Foreground="Black" Text="{Binding CurrentEmployee.EmployeeDetails.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock IsHitTestVisible="False" Text="Email Address" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="31,0,0,10" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=EmailAddress}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="20 0 0 0">
                        <Label Content="Designation:" VerticalAlignment="Center" />
                        <ComboBox Width="200" ItemsSource="{Binding Designations}" SelectedValue="DesignationValue" SelectedValuePath="{Binding CurrentEmployee.EmployeeDetails.Designation.DesignationValue ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding CurrentEmployee.EmployeeDetails.Designation , Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}" Height="32">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=DesignationValue}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <Grid Grid.Row="1" Grid.Column="2" Margin="40 0 0 0" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <Button Content="Search" Grid.Column="0" Width="80" Command="{Binding EmployeeOperations}" CommandParameter="Search" Margin="0 0 10 0" />
                        <Button Content="Clear" Grid.Column="1" Width="80" Command="{Binding EmployeeOperations}" CommandParameter="ClearEntry" Margin="0 0 10 0" />
                    </Grid>
                </Grid>
                <Separator Margin="0 15 0 25" />
                <DataGrid  AutoGenerateColumns="False" CanUserAddRows="False" Height="auto" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" CanUserResizeRows="False" CanUserResizeColumns="False" IsReadOnly="True" MaxHeight="200" HeadersVisibility="Column" ItemsSource="{Binding Path=Employees}" SelectedItem="{Binding AlterEmployee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Code" Width="2*" Binding="{Binding EmployeeCode}" />
                        <DataGridTextColumn Header="Name" Width="3*" Binding="{Binding FullName}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>


                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Email" Width="3*" Binding="{Binding Email}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Designation" Width="3*" Binding="{Binding Designation.DesignationValue}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Department" Width="3*" Binding="{Binding Department.DepartmentValue}" />
                        <DataGridTextColumn Header="Joining Date" Width="3*" Binding="{Binding JoiningDate}" />
                        <DataGridTextColumn Header="Release Date" Width="3*" Binding="{Binding ReleaseDate}" />
                        <DataGridTemplateColumn Width="5*" Header="Actions">

                            <DataGridTemplateColumn.CellTemplate>

                                <DataTemplate>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}" CommandParameter="viewEmployee" Margin="5 0 -10 0">
                                            <Image Source="C:\Users\NEHA UTTWANI\Downloads\view.png" />
                                        </Button>
                                        <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}" CommandParameter="editEmployee" Margin="20 0 -10 0">
                                            <Image Source="C:\Users\NEHA UTTWANI\Downloads\edit.png" />
                                        </Button>
                                        <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}" CommandParameter="Remove" Margin="20 0 -10 0">
                                            <Image Source="C:\Users\NEHA UTTWANI\Downloads\remove.png" />
                                        </Button>
                                        <Button Style="{StaticResource actions}" Margin="20 0 10 0" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}" CommandParameter="projectMapping">
                                            <Image Source="C:\Users\NEHA UTTWANI\Downloads\project.png" />
                                        </Button>
                                    </StackPanel>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>


        </Grid>
        <Grid Visibility="{Binding EmployeeAdd}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />

            </Grid.RowDefinitions>

            <Label FontSize="30" Content="Employee - Add" />
            <Button Content="Back" Grid.Column="1" Width="90" Margin="0 10 0 10" Command="{Binding EmployeeOperations}" CommandParameter="EmployeeMain" />
            <Separator Grid.Row="0" VerticalAlignment="Bottom" Grid.Column="0" Grid.ColumnSpan="2" />
            <TabControl Grid.Row="1" Grid.ColumnSpan="2" Margin="0 10 0 10" SelectedIndex="{Binding SelectedTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <TabItem Header="Employee Details">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="0 10 0 10">
                            <Label Content="Code:" VerticalAlignment="Center" Margin="0 0 20 0" />
                            <Grid>
                                <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="Code" Margin="28 0 0 0" Foreground="Black" Text="" IsEnabled="False" Width="170" />
                                <TextBlock IsHitTestVisible="False" Text="Code" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="36,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=Code}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="0 0 0 10">
                            <Label Content="First Name:" VerticalAlignment="Center" Margin="0 0 10 0" />
                            <Grid>
                                <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="FirstName" Margin="9 0 0 0" Foreground="Black" Text="{Binding CurrentEmployee.EmployeeDetails.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Validation.ErrorTemplate="{StaticResource ErrorTemplate}" Width="170" />
                                <TextBlock IsHitTestVisible="False" Text="First Name" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="17,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=FirstName}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="55 0 0 10">
                            <Label Content="Last Name:" VerticalAlignment="Center" Margin="0 0 10 0" />
                            <Grid>
                                <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="LastName" Margin="38 0 0 0" Foreground="Black" Text="{Binding CurrentEmployee.EmployeeDetails.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="170" />
                                <TextBlock IsHitTestVisible="False" Text="Last Name" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="46,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=LastName}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Margin="0 0 0 10">
                            <Label Content="Email:" VerticalAlignment="Center" Margin="0 0 10 0" />
                            <Grid>
                                <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="Email" Margin="38 0 0 0" Foreground="Black" Text="{Binding CurrentEmployee.EmployeeDetails.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="170" />
                                <TextBlock IsHitTestVisible="False" Text="Email" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="45,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=Email}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Margin="0 0 0 10">
                            <Label Content="Password:" VerticalAlignment="Center" Margin="0 0 10 0" />
                            <Grid>
                                <components:BindablePasswordBox  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="16 0 0 0"  Width="170" Height="32" Password="{Binding CurrentEmployee.EmployeeDetails.Password,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                               
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="55 0 0 10">
                            <Label Content="Confirm Password:" VerticalAlignment="Center" Margin="0 0 9 0" />
                            <Grid>
                                <components:BindableConfirmPassword  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 0 0 0" Foreground="Black" Height="32" Width="170" ConfirmPassword="{Binding CurrentEmployee.EmployeeDetails.ConfirmPassword,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                <!--<TextBlock IsHitTestVisible="False" Text="Confirm Password" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=ConfirmPassword}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>-->
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" Margin="0 0 0 10">
                            <Label Content="Department:" VerticalAlignment="Center" Margin="2 0 10 0" />
                            <ComboBox Width="170" ItemsSource="{Binding Departments}" SelectedValuePath="DepartmentValue"
                                      SelectedValue="{Binding CurrentEmployee.EmployeeDetails.Department.DepartmentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding CurrentEmployee.EmployeeDetails.Department, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=DepartmentValue}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                        </StackPanel>
                        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Margin="55 0 0 10">
                            <Label Content="Designation:" VerticalAlignment="Center" Margin="0 0 10 0" />
                            <ComboBox Width="170" Margin="31 0 0 0" ItemsSource="{Binding Designations}" SelectedValuePath="DesignationValue"
                                      SelectedValue="{Binding CurrentEmployee.EmployeeDetails.Designation.DesignationValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding CurrentEmployee.EmployeeDetails.Designation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=DesignationValue}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                        </StackPanel>
                        <StackPanel Grid.Row="5" Grid.Column="0" Orientation="Horizontal" Margin="0 3 0 10">
                            <Label Content="Joining Date:" VerticalAlignment="Center" />
                            <DatePicker SelectedDate="{Binding CurrentEmployee.EmployeeDetails.JoiningDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True" Focusable="False" Width="170" Margin="9 0 0 0" />

                        </StackPanel>
                        <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Margin="55 3 0 10">
                            <Label Content="Release Date:" VerticalAlignment="Center" />
                            <DatePicker SelectedDate="{Binding CurrentEmployee.EmployeeDetails.ReleaseDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True" Focusable="False" Width="170" Margin="37 0 0 0" />

                        </StackPanel>
                        <StackPanel Grid.Row="6" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="0 0 0 10">
                            <Button Content="Next" Height="35" Width="90" Margin="0 0 10 0" Command="{Binding EmployeeOperations}" CommandParameter="SecondTab" />
                            <Button Content="Clear" Height="35" Width="90" />

                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Personal Details">
                    <Grid Margin="3,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="66" />
                            <ColumnDefinition Width="210.793" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="0,10,375,10" Grid.ColumnSpan="3">
                            <Label Content="Date of Birth:" VerticalAlignment="Center" />
                            <DatePicker SelectedDate="{Binding CurrentEmployee.PersonalDetails.DOB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True" Focusable="False" Width="170" Margin="26 0 0 0" />
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Margin="45,10,30,10">
                            <Label Content="Contact Number:" VerticalAlignment="Center" Margin="0 0 9 0" />
                            <Grid>
                                <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="ContactNumber" Margin="15 0 0 0" Foreground="Black" Text="{Binding CurrentEmployee.PersonalDetails.ContactNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="170" />
                                <TextBlock IsHitTestVisible="False" Text="Contact Number" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="23,0,0,0" Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=ContactNumber}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="0,3,375,10" Grid.ColumnSpan="3">
                            <Label Content="Gender:" VerticalAlignment="Center" />
                            <RadioButton Content="Male" Margin="56 0 55 0" VerticalContentAlignment="Center" IsChecked="{Binding Path=RadioButton, Converter={StaticResource radioBoolToIntConverter}, ConverterParameter=0}" />
                            <RadioButton Content="Female" VerticalContentAlignment="Center" IsChecked="{Binding Path=RadioButton, Converter={StaticResource radioBoolToIntConverter}, ConverterParameter=1}" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" Margin="45 3 30 10">
                            <Label Content="Marital Status:" VerticalAlignment="Center" />
                            <ComboBox Width="170" Margin="39 0 0 0" ItemsSource="{Binding MaritalState}" SelectedItem="{Binding Path=SelectedMaritalState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Margin="0,3,375,10" Grid.ColumnSpan="3">
                            <Label Content="Present Address:" VerticalAlignment="Top" />
                            <TextBox Height="90" Margin="9 0 0  0" VerticalAlignment="Top" Width="170" Text="{Binding CurrentEmployee.PersonalDetails.PresentAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="Black" />
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="45,3,30,10" Width="300">
                            <Label Content="Permanent Address:" VerticalAlignment="Top" />
                            <StackPanel Orientation="Vertical" Margin="9 0 0 0" Height="130" Width="171">
                                <CheckBox Content="Same as Present Address" Width="171" VerticalContentAlignment="Center" IsChecked="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding EmployeeOperations}" CommandParameter="SameAddress" />
                                <TextBox Height="90" Width="171" HorizontalAlignment="Left" Text="{Binding CurrentEmployee.PersonalDetails.PermanentAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="Black" />
                            </StackPanel>
                        </StackPanel>

                        <Button Content="Next" Height="35" Width="90" Margin="0 0 10 10" Grid.Column="2" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" Command="{Binding EmployeeOperations}" CommandParameter="SaveEmployee" />
                        <Button Content="Clear" Height="35" Width="90" Margin="10,0,0,10" Grid.Column="3" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" />


                    </Grid>
                </TabItem>
                <TabItem Header="Education Details">
                    <Grid>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Button Width="100" Height="40" Grid.Row="0" HorizontalAlignment="Right" Margin="0 50 20 0"  Command="{Binding EmployeeOperations}" CommandParameter="AddRow">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="+" Height="90" Width="39" FontSize="50" VerticalAlignment="Center" Margin="-15 0 0 0" Foreground="White" FontWeight="Light" />
                                <Label Content="ADD" VerticalAlignment="Center" Foreground="White" />
                            </StackPanel>
                        </Button>
                        <DataGrid Grid.Row="1" Margin="20 10 20 0" Grid.ColumnSpan="2" ItemsSource="{Binding CurrentEmployee.EmployeeQualifications}" CanUserAddRows="False" AutoGenerateColumns="False" SelectedItem="{Binding AlterQual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="auto" HorizontalScrollBarVisibility="Disabled" CanUserResizeRows="False" CanUserResizeColumns="False" x:Name="dataGrid1" HeadersVisibility="Column" SelectedIndex="{Binding SelectedIndex,Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto">
                           
                                <DataGrid.Resources>
                                <!--QUALIFICATION-->
                                <!-- the non-editing cell -->
                                <DataTemplate x:Key="ReadonlyQual">
                                    <TextBlock Text="{Binding Quailification, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableQual">

                                    <TextBox Text="{Binding Quailification, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                   
                                </DataTemplate>
                                <!-- BOARD -->
                                <DataTemplate x:Key="ReadonlyBoard">
                                    <TextBlock Text="{Binding  Board, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableBoard">

                                    <TextBox Text="{Binding Board, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                   
                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyInst">
                                    <TextBlock Text="{Binding Institute, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableInst">

                                    <TextBox Text="{Binding Institute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    
                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyState">
                                    <TextBlock Text="{Binding InstituteState, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableState">

                                    <TextBox Text="{Binding InstituteState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    
                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyYear">
                                    <TextBlock Text="{Binding PassingYear, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableYear">

                                    <TextBox Text="{Binding PassingYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    
                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyPercent">
                                    <TextBlock Text="{Binding PercentageObtained}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditablePercent">

                                    <TextBox Text="{Binding PercentageObtained, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                   
                                </DataTemplate>

                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Qualification" Width="2*" x:Name="qual">
                                        <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}"/>
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="true">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableQual}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyQual}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Board" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}"/>
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableBoard}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyBoard}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Name of Institute" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableInst}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyInst}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="State" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableState}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyState}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Passing Year" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableYear}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyYear}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Percentage" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditablePercent}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyPercent}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                
                                <DataGridTemplateColumn Header="Actions" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>

                                        <DataTemplate>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="editQual" Visibility="{Binding EditVisible}">
                                                    <Image Source="C:\Users\NEHA UTTWANI\Downloads\edit.png"/>
                                                </Button>
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="saveQual" Visibility="{Binding SaveVisible}" Content="Save">
                                                    <!--<Image Source="C:\Users\NEHA UTTWANI\Downloads\save.png"/>-->
                                                </Button>
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="deleteQual" Height="15" Width="20">
                                                    <Image Source="C:\Users\NEHA UTTWANI\Downloads\cancel.png"/>
                                                </Button>
                                                
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Width="100" Height="40" Grid.Row="2" HorizontalAlignment="Right" Margin="0 15 20 20"  Command="{Binding EmployeeOperations}" CommandParameter="Save" Content="Save"/>
                    </Grid>

                </TabItem>
                <TabItem Header="Experience Details">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Button Width="100" Height="40"  Grid.Row="0" HorizontalAlignment="Right" Margin="0 50 20 0" Command="{Binding EmployeeOperations}" CommandParameter="AddRowEx">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="+" Height="90" Width="39" FontSize="50" VerticalAlignment="Center" Margin="-15 0 0 0" Foreground="White" FontWeight="Light"/>
                                <Label Content="ADD" VerticalAlignment="Center" Foreground="White"/>
                            </StackPanel>
                        </Button>

                        <DataGrid Grid.Row="1" Margin="20 10 20 0" Grid.ColumnSpan="2" ItemsSource="{Binding CurrentEmployee.EmployeeExperience}" CanUserAddRows="False" AutoGenerateColumns="False" SelectedItem="{Binding AlterExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="auto" HorizontalScrollBarVisibility="Disabled" CanUserResizeRows="False" CanUserResizeColumns="False" HeadersVisibility="Column" VerticalScrollBarVisibility="Auto">

                            <DataGrid.Resources>
                              
                                <!-- the non-editing cell -->
                                <DataTemplate x:Key="ReadonlyOrg">
                                    <TextBlock Text="{Binding LastOrganization, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableOrg">
                                    
                                        <TextBox Text="{Binding LastOrganization, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    
                                </DataTemplate>
                                <!-- BOARD -->
                                <DataTemplate x:Key="ReadOnlyFrom">
                                    <!--<TextBlock Text="{Binding  fr, Mode=OneWay}" />-->
                                    <TextBlock Text="{Binding DateFrom, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableFrom">

                                    <DatePicker SelectedDate="{Binding DateFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True" Focusable="False" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                  
                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyTo">
                                    <TextBlock Text="{Binding ToDate, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableTo">

                                    <DatePicker SelectedDate="{Binding ToDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True" Focusable="False" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyDuration">
                                    <TextBlock Text="{Binding Duration, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableDuration">

                                    <TextBox Text="{Binding Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Foreground="Black" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </DataTemplate>

                                <DataTemplate x:Key="ReadonlyDesg">
                                    <TextBlock Text="{Binding Designation.DesignationValue, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </DataTemplate>

                                <!-- the editing cell -->
                                <DataTemplate x:Key="EditableDesg">
                                    
                                        <ComboBox Width="100" ItemsSource="{Binding Designations}" SelectedValuePath="DesignationValue"
                                      SelectedValue="{Binding Designation.DesignationValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding Designation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="32">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=DesignationValue}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                </DataTemplate>

                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Organization" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}"/>
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="true">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableOrg}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyOrg}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="From" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}"/>
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableFrom}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadOnlyFrom}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="To" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableTo}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyTo}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Duration (months)" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableDuration}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyDuration}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Designation" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <!-- the additional layer of content presenter -->
                                            <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                            <DataTemplate.Triggers>
                                                <!-- dynamically switch the content template by IsEditable binding -->
                                                <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource EditableDesg}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="false">
                                                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource ReadonlyDesg}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="Actions" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>

                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="editEx" Visibility="{Binding EditVisible}">
                                                    <Image Source="C:\Users\NEHA UTTWANI\Downloads\edit.png"/>
                                                </Button>
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="saveEx" Visibility="{Binding SaveVisible}" Content="Save">
                                                  
                                                </Button>
                                                <Button Style="{StaticResource actions}" Command="{Binding DataContext.EmployeeOperations,RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1}}"  CommandParameter="deleteEx" Height="15" Width="20">
                                                    
                                                    <Image Source="C:\Users\NEHA UTTWANI\Downloads\cancel.png"/>
                                                </Button>

                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Width="100" Height="40" Grid.Row="2" HorizontalAlignment="Right" Margin="0 15 20 20"  Command="{Binding EmployeeOperations}" CommandParameter="submit" Content="SUBMIT" FontSize="15"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

    </Grid>
</UserControl>
